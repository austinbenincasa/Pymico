# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: minionRPC.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='minionRPC.proto',
  package='MinionRPC',
  syntax='proto3',
  serialized_options=_b('P\001\242\002\003HLW'),
  serialized_pb=_b('\n\x0fminionRPC.proto\x12\tMinionRPC\"\x07\n\x05\x45mpty\"/\n\x0b\x66unctionReq\x12\x0e\n\x06plugin\x18\x01 \x01(\t\x12\x10\n\x08\x66unction\x18\x02 \x01(\t\"9\n\x0c\x66unctionResp\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\x05\"\x1c\n\npromptResp\x12\x0e\n\x06prompt\x18\x01 \x01(\t\"\x19\n\x07loadReq\x12\x0e\n\x06plugin\x18\x01 \x01(\t\"(\n\x08loadResp\x12\r\n\x05reply\x18\x01 \x01(\t\x12\r\n\x05\x65rror\x18\x02 \x01(\x05\"\x1c\n\x0bpluginsResp\x12\r\n\x05reply\x18\x01 \x01(\t\"\x1c\n\x0brestartResp\x12\r\n\x05reply\x18\x01 \x01(\t\"\x1d\n\x0cshutdownResp\x12\r\n\x05reply\x18\x01 \x01(\t\"\x1a\n\taliveResp\x12\r\n\x05reply\x18\x01 \x01(\t\"(\n\ncommandReq\x12\x0b\n\x03\x63wd\x18\x01 \x01(\t\x12\r\n\x05stdin\x18\x02 \x01(\t\"8\n\x0b\x63ommandResp\x12\x0e\n\x06stdout\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x03 \x01(\x05\x12\x0b\n\x03\x63wd\x18\x04 \x01(\t2\xec\x03\n\tMinionRPC\x12\x35\n\x07restart\x12\x10.MinionRPC.Empty\x1a\x16.MinionRPC.restartResp\"\x00\x12\x37\n\x08shutdown\x12\x10.MinionRPC.Empty\x1a\x17.MinionRPC.shutdownResp\"\x00\x12\x36\n\ncheckAlive\x12\x10.MinionRPC.Empty\x1a\x14.MinionRPC.aliveResp\"\x00\x12\x38\n\ngetPlugins\x12\x10.MinionRPC.Empty\x1a\x16.MinionRPC.pluginsResp\"\x00\x12\x36\n\tgetPrompt\x12\x10.MinionRPC.Empty\x1a\x15.MinionRPC.promptResp\"\x00\x12\x37\n\nloadPlugin\x12\x12.MinionRPC.loadReq\x1a\x13.MinionRPC.loadResp\"\x00\x12\x46\n\x11runPluginFunction\x12\x16.MinionRPC.functionReq\x1a\x17.MinionRPC.functionResp\"\x00\x12\x44\n\x0frunShellCommand\x12\x15.MinionRPC.commandReq\x1a\x16.MinionRPC.commandResp\"\x00\x30\x01\x42\x08P\x01\xa2\x02\x03HLWb\x06proto3')
)




_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='MinionRPC.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=37,
)


_FUNCTIONREQ = _descriptor.Descriptor(
  name='functionReq',
  full_name='MinionRPC.functionReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='plugin', full_name='MinionRPC.functionReq.plugin', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='function', full_name='MinionRPC.functionReq.function', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=86,
)


_FUNCTIONRESP = _descriptor.Descriptor(
  name='functionResp',
  full_name='MinionRPC.functionResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='MinionRPC.functionResp.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='MinionRPC.functionResp.data', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='MinionRPC.functionResp.error', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=145,
)


_PROMPTRESP = _descriptor.Descriptor(
  name='promptResp',
  full_name='MinionRPC.promptResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prompt', full_name='MinionRPC.promptResp.prompt', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=175,
)


_LOADREQ = _descriptor.Descriptor(
  name='loadReq',
  full_name='MinionRPC.loadReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='plugin', full_name='MinionRPC.loadReq.plugin', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=177,
  serialized_end=202,
)


_LOADRESP = _descriptor.Descriptor(
  name='loadResp',
  full_name='MinionRPC.loadResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reply', full_name='MinionRPC.loadResp.reply', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='MinionRPC.loadResp.error', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=204,
  serialized_end=244,
)


_PLUGINSRESP = _descriptor.Descriptor(
  name='pluginsResp',
  full_name='MinionRPC.pluginsResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reply', full_name='MinionRPC.pluginsResp.reply', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=246,
  serialized_end=274,
)


_RESTARTRESP = _descriptor.Descriptor(
  name='restartResp',
  full_name='MinionRPC.restartResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reply', full_name='MinionRPC.restartResp.reply', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=276,
  serialized_end=304,
)


_SHUTDOWNRESP = _descriptor.Descriptor(
  name='shutdownResp',
  full_name='MinionRPC.shutdownResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reply', full_name='MinionRPC.shutdownResp.reply', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=306,
  serialized_end=335,
)


_ALIVERESP = _descriptor.Descriptor(
  name='aliveResp',
  full_name='MinionRPC.aliveResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reply', full_name='MinionRPC.aliveResp.reply', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=337,
  serialized_end=363,
)


_COMMANDREQ = _descriptor.Descriptor(
  name='commandReq',
  full_name='MinionRPC.commandReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cwd', full_name='MinionRPC.commandReq.cwd', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stdin', full_name='MinionRPC.commandReq.stdin', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=365,
  serialized_end=405,
)


_COMMANDRESP = _descriptor.Descriptor(
  name='commandResp',
  full_name='MinionRPC.commandResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stdout', full_name='MinionRPC.commandResp.stdout', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='code', full_name='MinionRPC.commandResp.code', index=1,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cwd', full_name='MinionRPC.commandResp.cwd', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=407,
  serialized_end=463,
)

DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['functionReq'] = _FUNCTIONREQ
DESCRIPTOR.message_types_by_name['functionResp'] = _FUNCTIONRESP
DESCRIPTOR.message_types_by_name['promptResp'] = _PROMPTRESP
DESCRIPTOR.message_types_by_name['loadReq'] = _LOADREQ
DESCRIPTOR.message_types_by_name['loadResp'] = _LOADRESP
DESCRIPTOR.message_types_by_name['pluginsResp'] = _PLUGINSRESP
DESCRIPTOR.message_types_by_name['restartResp'] = _RESTARTRESP
DESCRIPTOR.message_types_by_name['shutdownResp'] = _SHUTDOWNRESP
DESCRIPTOR.message_types_by_name['aliveResp'] = _ALIVERESP
DESCRIPTOR.message_types_by_name['commandReq'] = _COMMANDREQ
DESCRIPTOR.message_types_by_name['commandResp'] = _COMMANDRESP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.Empty)
  ))
_sym_db.RegisterMessage(Empty)

functionReq = _reflection.GeneratedProtocolMessageType('functionReq', (_message.Message,), dict(
  DESCRIPTOR = _FUNCTIONREQ,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.functionReq)
  ))
_sym_db.RegisterMessage(functionReq)

functionResp = _reflection.GeneratedProtocolMessageType('functionResp', (_message.Message,), dict(
  DESCRIPTOR = _FUNCTIONRESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.functionResp)
  ))
_sym_db.RegisterMessage(functionResp)

promptResp = _reflection.GeneratedProtocolMessageType('promptResp', (_message.Message,), dict(
  DESCRIPTOR = _PROMPTRESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.promptResp)
  ))
_sym_db.RegisterMessage(promptResp)

loadReq = _reflection.GeneratedProtocolMessageType('loadReq', (_message.Message,), dict(
  DESCRIPTOR = _LOADREQ,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.loadReq)
  ))
_sym_db.RegisterMessage(loadReq)

loadResp = _reflection.GeneratedProtocolMessageType('loadResp', (_message.Message,), dict(
  DESCRIPTOR = _LOADRESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.loadResp)
  ))
_sym_db.RegisterMessage(loadResp)

pluginsResp = _reflection.GeneratedProtocolMessageType('pluginsResp', (_message.Message,), dict(
  DESCRIPTOR = _PLUGINSRESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.pluginsResp)
  ))
_sym_db.RegisterMessage(pluginsResp)

restartResp = _reflection.GeneratedProtocolMessageType('restartResp', (_message.Message,), dict(
  DESCRIPTOR = _RESTARTRESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.restartResp)
  ))
_sym_db.RegisterMessage(restartResp)

shutdownResp = _reflection.GeneratedProtocolMessageType('shutdownResp', (_message.Message,), dict(
  DESCRIPTOR = _SHUTDOWNRESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.shutdownResp)
  ))
_sym_db.RegisterMessage(shutdownResp)

aliveResp = _reflection.GeneratedProtocolMessageType('aliveResp', (_message.Message,), dict(
  DESCRIPTOR = _ALIVERESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.aliveResp)
  ))
_sym_db.RegisterMessage(aliveResp)

commandReq = _reflection.GeneratedProtocolMessageType('commandReq', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDREQ,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.commandReq)
  ))
_sym_db.RegisterMessage(commandReq)

commandResp = _reflection.GeneratedProtocolMessageType('commandResp', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDRESP,
  __module__ = 'minionRPC_pb2'
  # @@protoc_insertion_point(class_scope:MinionRPC.commandResp)
  ))
_sym_db.RegisterMessage(commandResp)


DESCRIPTOR._options = None

_MINIONRPC = _descriptor.ServiceDescriptor(
  name='MinionRPC',
  full_name='MinionRPC.MinionRPC',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=466,
  serialized_end=958,
  methods=[
  _descriptor.MethodDescriptor(
    name='restart',
    full_name='MinionRPC.MinionRPC.restart',
    index=0,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_RESTARTRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='shutdown',
    full_name='MinionRPC.MinionRPC.shutdown',
    index=1,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_SHUTDOWNRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='checkAlive',
    full_name='MinionRPC.MinionRPC.checkAlive',
    index=2,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_ALIVERESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getPlugins',
    full_name='MinionRPC.MinionRPC.getPlugins',
    index=3,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_PLUGINSRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getPrompt',
    full_name='MinionRPC.MinionRPC.getPrompt',
    index=4,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_PROMPTRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='loadPlugin',
    full_name='MinionRPC.MinionRPC.loadPlugin',
    index=5,
    containing_service=None,
    input_type=_LOADREQ,
    output_type=_LOADRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='runPluginFunction',
    full_name='MinionRPC.MinionRPC.runPluginFunction',
    index=6,
    containing_service=None,
    input_type=_FUNCTIONREQ,
    output_type=_FUNCTIONRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='runShellCommand',
    full_name='MinionRPC.MinionRPC.runShellCommand',
    index=7,
    containing_service=None,
    input_type=_COMMANDREQ,
    output_type=_COMMANDRESP,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MINIONRPC)

DESCRIPTOR.services_by_name['MinionRPC'] = _MINIONRPC

# @@protoc_insertion_point(module_scope)
